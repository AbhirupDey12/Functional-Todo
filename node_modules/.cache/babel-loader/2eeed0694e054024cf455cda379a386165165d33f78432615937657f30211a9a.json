{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABHIRUP\\\\Dropbox\\\\PC\\\\Desktop\\\\personalapp\\\\src\\\\todoreact\\\\Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport '../todoreact/style.css';\n\n// Get the local storage data back \nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLocalData = () => {\n  const lists = JSON.parse(localStorage.getItem('mytodolist'));\n  if (lists) {\n    return lists;\n  } else {}\n};\nconst Todo = () => {\n  _s();\n  const [inputData, setInputData] = React.useState(\"\");\n  const [items, setItems] = React.useState(getLocalData());\n\n  // add the items function \n  const addItem = () => {\n    if (!inputData) {\n      alert(\"Please fill the data\");\n    } else {\n      const myNewInputData = {\n        id: new Date().getTime().toString(),\n        name: inputData\n      };\n      setItems([...items, myNewInputData]);\n      setInputData(\"\");\n    }\n  };\n\n  // delete the items function\n  const deleteItem = index => {\n    const upDatedItem = items.filter(curElem => {\n      return curElem.id != index;\n    });\n    setItems(upDatedItem);\n  };\n\n  // Remove all the items from the list \n  const removeAll = () => {\n    setItems([]);\n  };\n\n  // adding localStorage \n  React.useEffect(() => {\n    localStorage.setItem('mytodolist', JSON.stringify(items));\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"child-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./images/todo.svg\",\n            alt: \"todologo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n            children: \"Add your list here \\u270C\\uFE0F \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u270D\\uFE0F Add items...\",\n            className: \"form-control\",\n            value: inputData,\n            onChange: event => setInputData(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-plus add-btn\",\n            \"aria-hidden\": \"true\",\n            onClick: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: [items.map(currElem => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"eachItem\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: currElem.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"todo-btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-pencil\",\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 51\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-trash\",\n                  \"aria-hidden\": \"true\",\n                  onClick: () => deleteItem(currElem.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 51\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 46\n              }, this)]\n            }, currElem.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 41\n            }, this);\n          }), \" ;\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn effect04\",\n            \"data-sm-link-text\": \"Remove All\",\n            onClick: removeAll,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"CHECK LIST\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this)\n  }, void 0, false);\n};\n_s(Todo, \"ULJQa6dt8ls+ah1fSipNpw+fwaE=\");\n_c = Todo;\nexport default Todo;\n\n// Note :- Whenever the state changes rerender of the compoment of the occurs \n// UseEffect ---> whether empty or not it will run for the first time and if [] only for the first time and if dependencie array either passed with value or left out it will run every time the sate variable get changed       \nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useEffect","getLocalData","lists","JSON","parse","localStorage","getItem","Todo","inputData","setInputData","useState","items","setItems","addItem","alert","myNewInputData","id","Date","getTime","toString","name","deleteItem","index","upDatedItem","filter","curElem","removeAll","setItem","stringify","event","target","value","map","currElem"],"sources":["C:/Users/ABHIRUP/Dropbox/PC/Desktop/personalapp/src/todoreact/Todo.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport '../todoreact/style.css';\r\n\r\n// Get the local storage data back \r\nconst getLocalData = () => {\r\n     const lists = JSON.parse(localStorage.getItem('mytodolist'));\r\n     if(lists) {\r\n          return lists;\r\n     } else {\r\n          \r\n     }\r\n}\r\n\r\nconst Todo = () => {\r\n     const [inputData, setInputData] = React.useState(\"\");\r\n     const [items, setItems] = React.useState(getLocalData());\r\n\r\n     // add the items function \r\n     const addItem = () => {\r\n          if (!inputData) {\r\n               alert(\"Please fill the data\");\r\n          }\r\n          else {\r\n               const myNewInputData = {\r\n                    id : new Date().getTime().toString()  ,\r\n                    name : inputData\r\n               }\r\n               setItems([ ...items, myNewInputData ]);\r\n               setInputData(\"\") ;\r\n          }\r\n     }\r\n\r\n     // delete the items function\r\n     const deleteItem = (index) => {\r\n          const upDatedItem = items.filter((curElem) => {\r\n               return curElem.id != index ;\r\n          })\r\n          setItems(upDatedItem);\r\n     }\r\n\r\n     // Remove all the items from the list \r\n     const removeAll = () => {\r\n          setItems([]);\r\n     }\r\n\r\n     // adding localStorage \r\n     React.useEffect(() => {\r\n          localStorage.setItem( 'mytodolist' , JSON.stringify(items) );\r\n     } , [items] ) ;\r\n\r\n     return (\r\n          <>\r\n               <div className=\"main-div\">\r\n\r\n                    <div className='child-div'>\r\n\r\n                         <figure>\r\n                              <img src=\"./images/todo.svg\" alt=\"todologo\" />\r\n                              <figcaption>Add your list here ✌️ </figcaption>\r\n                         </figure>\r\n\r\n                         <div className='addItems'>\r\n                              <input type=\"text\" placeholder='✍️ Add items...' className='form-control' value={inputData}\r\n                                   onChange={(event) => setInputData(event.target.value)} />\r\n                              <i className=\"fa fa-plus add-btn\" aria-hidden=\"true\" onClick={addItem}></i>\r\n                         </div>\r\n\r\n                         {/* show our items  */}\r\n\r\n                         <div className='showItems'>\r\n\r\n                              {items.map((currElem) => {\r\n                                   return (\r\n                                        <div className=\"eachItem\" key={currElem.id}>\r\n                                             <h3>{currElem.name}</h3>\r\n                                             <div className=\"todo-btn\">\r\n                                                  <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                                                  <i class=\"fa fa-trash\" aria-hidden=\"true\" \r\n                                                  onClick={ () => deleteItem(currElem.id) }></i>\r\n                                             </div>\r\n                                        </div>\r\n                                   );\r\n                              })} ;\r\n\r\n                         </div>\r\n\r\n                         {/* romove all button  */}\r\n\r\n                         <div className=\"showItems\">\r\n                              <button className='btn effect04' data-sm-link-text=\"Remove All\"\r\n                              onClick={removeAll}\r\n                              >\r\n                                   <span>CHECK LIST</span>\r\n                              </button>\r\n                         </div>\r\n\r\n                    </div>\r\n               </div>\r\n          </>\r\n     )\r\n}\r\n\r\nexport default Todo;\r\n\r\n// Note :- Whenever the state changes rerender of the compoment of the occurs \r\n// UseEffect ---> whether empty or not it will run for the first time and if [] only for the first time and if dependencie array either passed with value or left out it will run every time the sate variable get changed       "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}